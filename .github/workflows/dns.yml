name: DNS Workflow

on:
    workflow_dispatch:

jobs:
  terraform-plan:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./dns/terraform
    env:
        TF_VAR_proxmox_endpoint: ${{ secrets.PROXMOX_ENDPOINT }}
        TF_VAR_proxmox_username: ${{ secrets.PROXMOX_USERNAME }}
        TF_VAR_proxmox_password: ${{ secrets.PROXMOX_PASSWORD }}
        TF_VAR_dns01_password: ${{ secrets.DNS01_PASSWORD }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

  review:
    needs: terraform-plan
    runs-on: self-hosted
    environment: 'approve'
    steps:
      - name: Review Terraform Plan
        run: |
          echo "Terraform plan accepted."

  terraform-apply:
    defaults:
      run:
        working-directory: ./dns/terraform
    needs: review
    runs-on: self-hosted
    outputs:
      container_ip: ${{ steps.get_container_ip.outputs.only_IP }}
    env:
        TF_VAR_proxmox_endpoint: ${{ secrets.PROXMOX_ENDPOINT }}
        TF_VAR_proxmox_username: ${{ secrets.PROXMOX_USERNAME }}
        TF_VAR_proxmox_password: ${{ secrets.PROXMOX_PASSWORD }}
        TF_VAR_dns01_password: ${{ secrets.DNS01_PASSWORD }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve
    
    - name: Terraform Output
      id: get_container_ip 
      run: |
        container_IP=$(terraform output -raw container_ip)
        only_IP=${container_IP%/*}
        echo "only_IP=${only_IP}" >> $GITHUB_OUTPUT
  ansible:
    defaults:
      run:
        working-directory: ./dns/ansible
    needs: terraform-apply
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          echo "${{ secrets.DNS_SSH_PRIVATE_KEY }}" > deploy.key
          chmod 600 deploy.key

      - name: Run Ansible Playbook
        env:
          ANSIBLE_USER: ${{ secrets.DNS_ANSIBLE_USER }}
          ANSIBLE_HOST_KEY_CHECKING: False
          ANSIBLE_PRIVATE_KEY_FILE: ./deploy.key
          CONTAINER_IP: ${{ needs.terraform-apply.outputs.container_ip }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          sleep 10s
          ansible-playbook main.yml -i "$CONTAINER_IP," -u $ANSIBLE_USER